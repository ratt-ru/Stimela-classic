{
    "task": "cubical_ddf", 
    "base": "stimela/cubical",
    "hub": "quay.io",
    "tag": "1.7.2", 
    "description": "CubiCal is a suite of fast radio interferometric calibration routines exploiting complex optimisation.", 
    "prefix": "--",
    "version":"1.6.1",
    "binary": "gocubical",
    "junk":["cubical.last", "montblanc.log"],
    "msdir": true, 
    "parameters": [
        {
            "info": "Name of measurement set (MS)", 
            "dtype": "file", 
            "default": null, 
            "name": "data-ms", 
            "io": "msfile"
        }, 
        {
            "info": "Name of MS column to read for data.", 
            "dtype": "str", 
            "default": null, 
            "name": "data-column"
        }, 
        {
            "info": "Chunk data up by this number of timeslots. This limits the amount of data\nprocessed at once. Smaller chunks allow for a smaller RAM footprint and\ngreater parallelism, but this sets an upper limit on the solution intervals\nthat may be employed. 0 means use full time axis.", 
            "dtype": "int", 
            "default": null, 
            "name": "data-time-chunk"
        }, 
        {
            "info": "Chunk data by this number of channels. See time-chunk for info.\n0 means full frequency axis.", 
            "dtype": "int", 
            "default": null, 
            "name": "data-freq-chunk"
        }, 
        {
            "info": "If set, then time chunks will be broken up whenever the value in the named\ncolumn(s) jumps by >JUMPSIZE. Multiple column names may be given, separated\nby commas. Use None to disable.", 
            "dtype": "str", 
            "default": null, 
            "name": "data-chunk-by"
        }, 
        {
            "info": "The jump size used in conjunction with chunk-by. If 0, then any change in\nvalue is a jump. If n, then the change must be >n.", 
            "dtype": "float", 
            "default": null, 
            "name": "data-chunk-by-jump"
        }, 
        {
            "info": "If set, processes just one chunk of data matching the chunk ID. Useful for\ndebugging.", 
            "dtype": "str", 
            "default": null, 
            "name": "data-single-chunk"
        }, 
        {
            "info": "FIELD_ID to read from the MS.", 
            "dtype": "int", 
            "default": null, 
            "name": "sel-field"
        }, 
        {
            "info": "DATA_DESC_IDs to read from the MS. Default reads all. Can be specified as\ne.g. \"5\", \"5,6,7\", \"5~7\" (inclusive range), \"5:8\" (exclusive range),\n\"5:\" (from 5 to last).", 
            "dtype": "str", 
            "default": null, 
            "name": "sel-ddid"
        }, 
        {
            "info": "Additional TaQL selection string. Combined with other selection options.", 
            "dtype": "str", 
            "default": null, 
            "name": "sel-taql"
        }, 
        {
            "info": "Channels to read (within each DDID). Default reads all. Can be specified as\ne.g. \"5\", \"10~20\" (10 to 20 inclusive), \"10:21\" (same), \"10:\" (from 10 to\nend), \":10\" (0 to 9 inclusive), \"~9\" (same).", 
            "dtype": "str", 
            "default": null, 
            "name": "sel-chan"
        }, 
        {
            "info": "Predict model visibilities from given LSM (using Montblanc). Expects pattern of the style source(+-?source)*(:source(+-?source)*)* where source at present can be a column name, lsm or DDFacet DicoModel. Colons split directions as specifiable as 0-indexed indicies through the gain directions and fix directions switches. If an lsm file is spcified a tagged selection of sources can be picked by appending a @[user tag] option. If a DicoModel is used regions can be extracted from the model components through a @[DS9 polygon regions file].", 
            "default": null, 
            "check_io": false, 
            "name": "model-list", 
            "dtype": "file",
            "io": "output"
        }, 
        {
            "info": "Enable direction-dependent models. If 'auto', this is determined\nby --sol-jones and --model-list, otherwise, enable/disable\nexplicitly.", 
            "dtype": [
                "str", 
                "bool"
            ], 
            "default": "auto", 
            "name": "model-ddes"
        }, 
        {
            "info": "Apply beams if specified eg. 'beam_$(corr)_$(reim).fits' or\n'beam_$(CORR)_$(REIM).fits'", 
            "check_io": false, 
            "name": "model-beam-pattern", 
            "io": "input", 
            "default": null, 
            "dtype": "file"
        }, 
        {
            "info": "Beam l axis", 
            "dtype": "str", 
            "default": null, 
            "name": "model-beam-l-axis"
        }, 
        {
            "info": "Beam m axis", 
            "dtype": "str", 
            "default": null, 
            "name": "model-beam-m-axis"
        }, 
        {
            "info": "Use CPU or GPU for simulation.", 
            "dtype": "str", 
            "default": null, 
            "name": "montblanc-device-type"
        }, 
        {
            "info": "Precision for simulation.", 
            "dtype": "str", 
            "default": null, 
            "name": "montblanc-dtype"
        }, 
        {
            "info": "Simulate using linear or circular feeds.", 
            "dtype": "str", 
            "default": null, 
            "name": "montblanc-feed-type"
        }, 
        {
            "info": "Memory budget in MB for simulation.", 
            "dtype": "int", 
            "default": null, 
            "name": "montblanc-mem-budget"
        }, 
        {
            "info": "verbosity level of Montblanc's console output", 
            "dtype": "str", 
            "default": null, 
            "name": "montblanc-verbosity"
        }, 
        {
            "info": "Column to read weights from. Weights are applied by default. Specify an\nempty string to disable.", 
            "dtype": "str", 
            "default": null, 
            "name": "weight-column"
        }, 
        {
            "info": "Which flagsets will be applied prior to calibration. \nUse \"-FLAGSET\" to apply everything except the named flagset (\"-cubical\" is\nuseful, to ignore the flags of a previous CubiCal run).", 
            "dtype": "str", 
            "default": null, 
            "name": "flags-apply"
        }, 
        {
            "info": "Insert BITFLAG column if it is missing, and initialize a named flagset\nfrom FLAG/FLAG_ROW.", 
            "dtype": "str", 
            "default": null, 
            "name": "flags-auto-init"
        }, 
        {
            "info": "Save flags to named flagset in BITFLAG. If none or 0, will not save.", 
            "dtype": "str", 
            "default": null, 
            "name": "flags-save"
        }, 
        {
            "info": "If true, reninitializes BITFLAG column from scratch. Useful if you ended up\nwith a dead one.", 
            "dtype": "bool", 
            "default": null, 
            "name": "flags-reinit-bitflags"
        }, 
        {
            "info": "If True, will do an extra round of flagging at the end  (post-solution)\nbased on solutions statistics, as per the following options.", 
            "dtype": "bool", 
            "default": null, 
            "name": "flags-post-sol"
        }, 
        {
            "info": "Intervals with chi-squared values larger than this value times the median\nwill be flagged.", 
            "dtype": "str", 
            "default": null, 
            "name": "flags-tf-chisq-median"
        }, 
        {
            "info": "Minimum percentage of unflagged visibilities per time/frequncy slot\nrequired to prevent flagging.", 
            "dtype": "str", 
            "default": null, 
            "name": "flags-tf-np-median"
        }, 
        {
            "info": "Minimum percentage of unflagged visibilities along the time axis required\nto prevent flagging.", 
            "dtype": "str", 
            "default": null, 
            "name": "flags-time-density"
        }, 
        {
            "info": "Minimum percentage of unflagged visibilities along the frequency axis\nrequired to prevent flagging.", 
            "dtype": "str", 
            "default": null, 
            "name": "flags-chan-density"
        }, 
        {
            "info": "Minimum percentage of unflagged visibilities along the DDID axis\nrequired to prevent flagging.", 
            "dtype": "str", 
            "default": null, 
            "name": "flags-ddid-density"
        }, 
        {
            "info": "Enable Mad Max flagging in the solver. This computes the median absolute residual (i.e. median absolute deviation from zero), and flags visibilities exceeding the thresholds", 
            "dtype": "bool", 
            "name": "madmax-enable"
        }, 
        {
            "info": "MAD estimation mode. Use 'corr' for a separate estimate per each baseline and correlation. Otherwise, a single estimate per baseline is computed using 'all' correlations, or only the 'diag' or 'offdiag' correlations.", 
            "dtype": "str", 
            "name": "madmax-estimate", 
            "choices": [
                "corr", 
                "all", 
                "diag", 
                "offdiag"
            ]
        }, 
        {
            "info": "Enable plots for Mad Max flagging. Use 'show' to show figures interactively. Plots will show the worst flagged baseline, and a median flagged baseline, provided the fraction of flagged visibilities is above --flags-mad-plot-thr.", 
            "dtype": "bool", 
            "name": "madmax-plot"
        }, 
        {
            "info": "Threshold (in terms of fraction of visibilities flagged) above which plots will be generated.", 
            "dtype": "float", 
            "name": "madmax-plot-frac-above"
        }, 
        {
            "info": "Flag on on-diagonal (parallel-hand) residuals", 
            "dtype": "bool", 
            "name": "madmax-diag"
        }, 
        {
            "info": "Flag on off-diagonal (cross-hand) residuals", 
            "dtype": "bool", 
            "name": "madmax-offdiag"
        }, 
        {
            "info": "Threshold for global median MAD (MMAD) flagging. MMAD is computed as the median of the per-baseline MADs. Residuals exceeding S*MMAD/1.428 will be flagged. Can be specified", 
            "dtype": "list:float", 
            "name": "madmax-global-threshold"
        }, 
        {
            "info": "Threshold for MAD flagging per baseline (specified in sigmas). Residuals exceeding mad-thr*MAD/1.428 will be flagged. MAD is computed per baseline. This can be specified as a list e.g. N1,N2,N3,... The first value is used to flag residuals before a solution starts (use 0 to disable), the next value is used when the residuals are first recomputed during the solution several iteratins later (see -chi-int), etc. A final pass may be done at the end of the solution. The last value in the list is reused if necessary. Using a list with gradually decreasing values may be sensible. #metavar:SIGMAS", 
            "dtype": "list:float", 
            "name": "madmax-threshold"
        }, 
        {
            "info": "Comma-separated list of Jones terms to enable, e.g. \"G,B,dE\"\n(default: G)", 
            "dtype": "str", 
            "default": null, 
            "name": "sol-jones"
        }, 
        {
            "info": "If true, then data, model and gains are taken to be diagonal. Off-diagonal terms in data and model are ignored. This option is then enforced on all Jones terms.", 
            "dtype": "bool", 
            "name": "sel-diag"
        }, 
        {
            "info": "if true, then data, model and gains are taken to be diagonal. off-diagonal terms in data and model are ignored. this option is then enforced on all jones terms.", 
            "dtype": "bool", 
            "name": "g-diag-only"
        }, 
        {
            "info": "If true, then data, model and gains are taken to be diagonal. Off-diagonal terms in data and model are ignored. This option is then enforced on all Jones terms.", 
            "dtype": "bool", 
            "name": "dd-diag-only"
        }, 
        {
            "info": "Solve in single or double precision", 
            "dtype": "str", 
            "default": null, 
            "name": "sol-precision"
        }, 
        {
            "info": "Theshold for gain accuracy - gains which improve by less than this value\nare considered converged.", 
            "dtype": "str", 
            "default": null, 
            "name": "sol-delta-g"
        }, 
        {
            "info": "Theshold for solution stagnancy - if the chi-squared is improving by less\nthan this value, the gain is considered stalled.", 
            "dtype": "str", 
            "default": null, 
            "name": "sol-delta-chi"
        }, 
        {
            "info": "Number of iterations to perform between chi-suqared checks. This is done to\navoid computing the expensive chi-squared test evey iteration.", 
            "dtype": "str", 
            "default": null, 
            "name": "sol-chi-int"
        }, 
        {
            "info": "Re-estimate chi-squred and noise at the end of a solution cycle. Disabling\nlast rites can save a bit of time, but makes the post-solution stats less\ninformative.", 
            "dtype": "bool", 
            "default": null, 
            "name": "sol-last-rites"
        }, 
        {
            "info": "Minimum percentage of solutions which must have stalled before terminating\nthe solver.", 
            "dtype": "float", 
            "default": null, 
            "name": "sol-stall-quorum"
        }, 
        {
            "info": "Number of iterations per Jones term. If empty, then each Jones\nterm is solved for once, up to convergence, or up to its -max-iter\nsetting.\nOtherwise, set to a list giving the number of iterations per Jones term.\nFor example, given two Jones terms and --sol-num-iter 10,20,10, it will\ndo 10 iterations on the first term, 20 on the second, and 10 again on the\nfirst.", 
            "dtype": [
                "list:int", 
                "list:str"
            ], 
            "default": [50], 
            "name": "sol-term-iters"
        }, 
        {
            "info": "Min baseline length to solve for", 
            "dtype": "float", 
            "default": null, 
            "name": "sol-min-bl"
        }, 
        {
            "info": "Max baseline length to solve for. If 0, no maximum is applied.", 
            "dtype": "float", 
            "default": null, 
            "name": "sol-max-bl"
        }, 
        {
            "info": "Additional subset of data to actually solve for. Any TaQL string may be\nused.", 
            "dtype": "str", 
            "default": null, 
            "name": "sol-subset"
        }, 
        {
            "info": "Load and apply BBCs computed in a previous run. Apply with care! This will\ntend to suppress all unmodelled flux towards the centre of the field.", 
            "dtype": "file", 
            "default": null, 
            "name": "bbc-load-from", 
            "io": "input"
        }, 
        {
            "info": "Compute full 2x2 BBCs (as opposed to diagonal-only). Only useful if you\nreally trust the polarisation information in your sky model.", 
            "dtype": "bool", 
            "default": null, 
            "name": "bbc-compute-2x2"
        }, 
        {
            "info": "Apply full 2x2 BBCs (as opposed to diagonal-only). Only enable this if you\nreally trust the polarisation information in your sky model.", 
            "dtype": "bool", 
            "default": null, 
            "name": "bbc-apply-2x2"
        }, 
        {
            "info": "Compute suggested BBCs at end of run,\nand save them to the given database. It can be useful to have this always\nenabled, since the BBCs provide useful diagnostics of the solution quality\n(and are not actually applied without a load-from setting).", 
            "dtype": "file", 
            "default": "{out[name]}-BBC-field_{sel[field]}-ddid_{sel[ddid]}.parmdb", 
            "name": "bbc-save-to", 
            "io": "output"
        }, 
        {
            "info": "Compute BBCs per-channel (else across entire band).", 
            "dtype": "bool", 
            "default": null, 
            "name": "bbc-per-chan"
        }, 
        {
            "info": "Generate output BBC plots.", 
            "dtype": "bool", 
            "default": null, 
            "name": "bbc-plot"
        }, 
        {
            "info": "Number of CPUs (processes) to use (0 or 1 disables parallelism).", 
            "dtype": "int", 
            "default": null, 
            "name": "dist-ncpu"
        }, 
        {
            "info": "Maximum number of time/freq data-chunks to load into memory simultaneously. If 0, then as many as possible will be loaded.", 
            "dtype": "int", 
            "default": 0, 
            "name": "dist-max-chunks"
        }, 
        {
            "info": "Number of OMP threads to use. 0: determine automatically.", 
            "dtype": "int", 
            "name": "dist-nthread"
        }, 
        {
            "info": "If empty or None, processes will not be pinned to cores. Otherwise, set to the starting core number, or 'N:K' to start with N and step by K", 
            "dtype": "int", 
            "name": "dist-pin"
        }, 
        {
            "info": "If not 0, pins the I/O & Montblanc process to a separate core, or cores if --montblanc-threads is specified). Ignored if --dist-pin is not set", 
            "dtype": "bool", 
            "name": "dist-pin-io"
        }, 
        {
            "info": "If set, pins the main process to a separate core. If set to, pins it to the same core as the I/O process, if I/O process is pinned. Ignored if --dist-pin is not set", 
            "dtype": [
                "bool", 
                "str"
            ], 
            "name": "pin-main"
        }, 
        {
            "info": "Minimum number of time/freq data-chunks to load into memory\nsimultaneously. This number should be divisible by ncpu-1 for optimal\nperformance.", 
            "dtype": "str", 
            "default": null, 
            "name": "dist-min-chunks"
        }, 
        {
            "info": "Base name of output files.", 
            "dtype": "file", 
            "default": null, 
            "name": "out-name", 
            "io": "output"
        }, 
        {
            "info": "Allow overwriting of existing output files. If this is set, and the output parset file exists, will raise an exception", 
            "dtype": "bool", 
            "default": true, 
            "name": "out-overwrite"
        }, 
        {
            "info": "Operational mode.\n[so] solve only;\n[sc] solve and generate corrected visibilities;\n[sr] solve and generate corrected residuals;\n[ss] solve and generate uncorrected residuals;\n[ac] apply solutions, generate corrected visibilities;\n[ar] apply solutions, generate corrected residuals;\n[as] apply solutions, generate uncorrected residuals;", 
            "dtype": "str", 
            "default": null, 
            "name": "out-mode", 
            "choices": [
                "so", 
                "sc", 
                "sr", 
                "ss", 
                "ac", 
                "ar", 
                "as"
            ]
        }, 
        {
            "info": "Output MS column name (if applicable).", 
            "dtype": "str", 
            "default": null, 
            "name": "out-column"
        }, 
        {
            "info": "If set, model visibilities will be written to the specified column.", 
            "dtype": "str", 
            "default": null, 
            "name": "out-model-column"
        }, 
        {
            "info": "Reinitialize output MS column. Useful if the column is in a half-filled\nor corrupt state.", 
            "dtype": "bool", 
            "default": null, 
            "name": "out-reinit-column"
        }, 
        {
            "info": "Which model to subtract, if generating residuals.", 
            "dtype": "int", 
            "default": null, 
            "name": "out-subtract-model"
        }, 
        {
            "info": "Which model directions to subtract, if generating residuals. \":\"\nsubtracts all. Can also be specified as \"N\", \"N:M\", \":N\", \"N:\", \"N,M,K\".", 
            "dtype": [
                "str", 
                "int"
            ], 
            "default": null, 
            "name": "out-subtract-dirs"
        }, 
        {
            "info": "Export gaintables to CASA caltable format. Tables are exported to same directory as set for cubical databases", 
            "dtype": "bool", 
            "default": false, 
            "name": "out-casa-gaintables"
        }, 
        {
            "info": "Generate summary plots.", 
            "dtype": "bool", 
            "default": true, 
            "name": "out-plots"
        }, 
        {
            "info": "Number of processes", 
            "dtype": "int", 
            "default": 0, 
            "name": "dist-nworker"
        }, 
        {
            "info": "Log memory usage.", 
            "dtype": "bool", 
            "default": null, 
            "name": "log-memory"
        }, 
        {
            "info": "Disable progress bars and some console output.", 
            "dtype": "bool", 
            "default": null, 
            "name": "log-boring"
        }, 
        {
            "info": "Append to log file if it exists.", 
            "dtype": "bool", 
            "default": null, 
            "name": "log-append"
        }, 
        {
            "info": "Default console output verbosity level. \nCan either be a single number, or a sequence of \"name=level,name=level,...\"\nassignments.", 
            "dtype": "str", 
            "default": null, 
            "name": "log-verbose"
        }, 
        {
            "info": "Default logfile output verbosity level. \nCan either be a single number, or a sequence of \"name=level,name=level,...\"\nassignments. If None, then this simply follows the console level.", 
            "dtype": "str", 
            "default": null, 
            "name": "log-file-verbose"
        }, 
        {
            "info": "Jumps into pdb on error.", 
            "dtype": "bool", 
            "default": null, 
            "name": "debug-pdb"
        }, 
        {
            "info": "Throw an error if a visibility amplitude in the results exceeds the given value.\nUseful for troubleshooting.", 
            "dtype": "float", 
            "default": null, 
            "name": "debug-panic-amplitude"
        }, 
        {
            "info": "Invoke pdb before entering the solver.", 
            "dtype": "bool", 
            "default": null, 
            "name": "debug-stop-before-solver"
        }, 
        {
            "info": "Seed random number generator with explicit seed. Useful for reproducibility\nof the random-based optimizations (sparsification, etc.).", 
            "dtype": "str", 
            "default": null, 
            "name": "misc-random-seed"
        }, 
        {
            "info": "Parset version number, for migration purposes. Can't be specified on command\nline.", 
            "dtype": "str", 
            "default": null, 
            "name": "misc-parset-version"
        }, 
        {
            "info": "Determines whether this term is direction dependent. --model-ddes must", 
            "dtype": "bool", 
            "default": null, 
            "name": "g-dd-term"
        }, 
        {
            "info": "Time solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "float", 
                "int"
            ], 
            "default": null, 
            "name": "g-time-int"
        }, 
        {
            "info": "Frequency solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "g-freq-int"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with diagonal amplitudes below this\nvalue.", 
            "dtype": "float", 
            "default": null, 
            "name": "g-clip-low"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with any amplitudes above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "g-clip-high"
        }, 
        {
            "info": "Number of iterations after which to clip this gain.", 
            "dtype": "int", 
            "default": null, 
            "name": "g-clip-after"
        }, 
        {
            "info": "Minimum percentage of converged solutions to accept.", 
            "dtype": "float", 
            "default": null, 
            "name": "g-conv-quorum"
        }, 
        {
            "info": "Reference antenna - its phase is guaranteed to be zero.", 
            "dtype": "str", 
            "default": null, 
            "name": "g-ref-ant"
        }, 
        {
            "info": "Set to 0 (and specify -load-from or -xfer-from) to load a non-solvable\nterm is loaded from disk. Not to be confused with --sol-jones, which\ndetermines the active Jones terms.", 
            "dtype": "bool", 
            "default": null, 
            "name": "g-solvable"
        }, 
        {
            "info": "Type of Jones matrix to solve for. Note that if multiple Jones terms are\nenabled, then only complex-2x2 is supported.", 
            "dtype": "str", 
            "default": null, 
            "name": "g-type"
        }, 
        {
            "info": "Load solutions from given database. The DB must define solutions\non the same time/frequency grid (i.e. should normally come from\ncalibrating the same pointing/observation). By default, the Jones\nmatrix label is used to form up parameter names, but his may be\noverridden by adding an explicit \"//LABEL\" to the database filename.", 
            "dtype": "file", 
            "default": null, 
            "name": "g-load-from", 
            "io": "input"
        }, 
        {
            "info": "Transfer solutions from given database. Similar to -load-from, but\nsolutions will be interpolated onto the required time/frequency grid,\nso they can originate from a different field (e.g. from a calibrator).", 
            "dtype": "file", 
            "default": null, 
            "name": "g-xfer-from", 
            "io": "input"
        }, 
        {
            "info": "Save solutions to given database.", 
            "dtype": "file", 
            "default": null, 
            "name": "g-save-to", 
            "io": "output"
        }, 
        {
            "info": "For DD terms, makes the listed directions non-solvable.", 
            "dtype": [
                "str", 
                "int"
            ], 
            "default": null, 
            "name": "g-fix-dirs"
        }, 
        {
            "info": "Determines update type. This does not change the Jones solver type, but\nrestricts the update rule to pin the solutions within a certain subspace:\n'full' is the default behaviour;\n'diag' pins the off-diagonal terms to 0;\n'phase-diag' also pins the amplitudes of the diagonal terms to unity;\n'amp-diag' also pins the phases to 0.", 
            "dtype": "str", 
            "default": null, 
            "name": "g-update-type"
        }, 
        {
            "info": "Flag solution intervals where the prior error estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "g-max-prior-error"
        }, 
        {
            "info": "Flag solution intervals where the posterior variance estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "g-max-post-error"
        }, 
        {
            "info": "Maximum number of iterations spent on this term.", 
            "dtype": "int", 
            "default": null, 
            "name": "g-max-iter"
        }, 
        {
            "info": "Flag propagation policy. Determines how flags raised on gains propagate back\ninto the data. Options are 'never' to never propagate, 'always' to always\npropagate, 'default' to only propagate flags from direction-independent gains.", 
            "dtype": "str", 
            "default": null, 
            "name": "g-prop-flags"
        }, 
        {
            "info": "Determines whether this term is direction dependent. --model-ddes must", 
            "dtype": "bool", 
            "default": null, 
            "name": "g1-dd-term"
        }, 
        {
            "info": "Time solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "g1-time-int"
        }, 
        {
            "info": "Frequency solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "g1-freq-int"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with diagonal amplitudes below this\nvalue.", 
            "dtype": "float", 
            "default": null, 
            "name": "g1-clip-low"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with any amplitudes above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "g1-clip-high"
        }, 
        {
            "info": "Number of iterations after which to clip this gain.", 
            "dtype": "int", 
            "default": null, 
            "name": "g1-clip-after"
        }, 
        {
            "info": "Minimum percentage of converged solutions to accept.", 
            "dtype": "float", 
            "default": null, 
            "name": "g1-conv-quorum"
        }, 
        {
            "info": "Reference antenna - its phase is guaranteed to be zero.", 
            "dtype": "str", 
            "default": null, 
            "name": "g1-ref-ant"
        }, 
        {
            "info": "Set to 0 (and specify -load-from or -xfer-from) to load a non-solvable\nterm is loaded from disk. Not to be confused with --sol-jones, which\ndetermines the active Jones terms.", 
            "dtype": "bool", 
            "default": null, 
            "name": "g1-solvable"
        }, 
        {
            "info": "Type of Jones matrix to solve for. Note that if multiple Jones terms are\nenabled, then only complex-2x2 is supported.", 
            "dtype": "str", 
            "default": null, 
            "name": "g1-type"
        }, 
        {
            "info": "Load solutions from given database. The DB must define solutions\non the same time/frequency grid (i.e. should normally come from\ncalibrating the same pointing/observation). By default, the Jones\nmatrix label is used to form up parameter names, but his may be\noverridden by adding an explicit \"//LABEL\" to the database filename.", 
            "dtype": "file", 
            "default": null, 
            "name": "g1-load-from", 
            "io": "input"
        }, 
        {
            "info": "Transfer solutions from given database. Similar to -load-from, but\nsolutions will be interpolated onto the required time/frequency grid,\nso they can originate from a different field (e.g. from a calibrator).", 
            "dtype": "file", 
            "default": null, 
            "name": "g1-xfer-from", 
            "io": "input"
        }, 
        {
            "info": "Save solutions to given database.", 
            "dtype": "file", 
            "default": null, 
            "name": "g1-save-to", 
            "io": "output"
        }, 
        {
            "info": "For DD terms, makes the listed directions non-solvable.", 
            "dtype": [
                "str", 
                "int"
            ], 
            "default": null, 
            "name": "g1-fix-dirs"
        }, 
        {
            "info": "Determines update type. This does not change the Jones solver type, but\nrestricts the update rule to pin the solutions within a certain subspace:\n'full' is the default behaviour;\n'diag' pins the off-diagonal terms to 0;\n'phase-diag' also pins the amplitudes of the diagonal terms to unity;\n'amp-diag' also pins the phases to 0.", 
            "dtype": "str", 
            "default": null, 
            "name": "g1-update-type"
        }, 
        {
            "info": "Flag solution intervals where the prior error estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "g1-max-prior-error"
        }, 
        {
            "info": "Flag solution intervals where the posterior variance estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "g1-max-post-error"
        }, 
        {
            "info": "Maximum number of iterations spent on this term.", 
            "dtype": "int", 
            "default": null, 
            "name": "g1-max-iter"
        }, 
        {
            "info": "Flag propagation policy. Determines how flags raised on gains propagate back\ninto the data. Options are 'never' to never propagate, 'always' to always\npropagate, 'default' to only propagate flags from direction-independent gains.", 
            "dtype": "str", 
            "default": null, 
            "name": "g1-prop-flags"
        }, 
        {
            "info": "Determines whether this term is direction dependent. --model-ddes must", 
            "dtype": "bool", 
            "default": null, 
            "name": "g2-dd-term"
        }, 
        {
            "info": "Time solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "g2-time-int"
        }, 
        {
            "info": "Frequency solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "g2-freq-int"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with diagonal amplitudes below this\nvalue.", 
            "dtype": "float", 
            "default": null, 
            "name": "g2-clip-low"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with any amplitudes above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "g2-clip-high"
        }, 
        {
            "info": "Number of iterations after which to clip this gain.", 
            "dtype": "int", 
            "default": null, 
            "name": "g2-clip-after"
        }, 
        {
            "info": "Minimum percentage of converged solutions to accept.", 
            "dtype": "float", 
            "default": null, 
            "name": "g2-conv-quorum"
        }, 
        {
            "info": "Reference antenna - its phase is guaranteed to be zero.", 
            "dtype": "str", 
            "default": null, 
            "name": "g2-ref-ant"
        }, 
        {
            "info": "Set to 0 (and specify -load-from or -xfer-from) to load a non-solvable\nterm is loaded from disk. Not to be confused with --sol-jones, which\ndetermines the active Jones terms.", 
            "dtype": "bool", 
            "default": null, 
            "name": "g2-solvable"
        }, 
        {
            "info": "Type of Jones matrix to solve for. Note that if multiple Jones terms are\nenabled, then only complex-2x2 is supported.", 
            "dtype": "str", 
            "default": null, 
            "name": "g2-type"
        }, 
        {
            "info": "Load solutions from given database. The DB must define solutions\non the same time/frequency grid (i.e. should normally come from\ncalibrating the same pointing/observation). By default, the Jones\nmatrix label is used to form up parameter names, but his may be\noverridden by adding an explicit \"//LABEL\" to the database filename.", 
            "dtype": "file", 
            "default": null, 
            "name": "g2-load-from", 
            "io": "input"
        }, 
        {
            "info": "Transfer solutions from given database. Similar to -load-from, but\nsolutions will be interpolated onto the required time/frequency grid,\nso they can originate from a different field (e.g. from a calibrator).", 
            "dtype": "file", 
            "default": null, 
            "name": "g2-xfer-from", 
            "io": "input"
        }, 
        {
            "info": "Save solutions to given database.", 
            "dtype": "file", 
            "default": null, 
            "name": "g2-save-to", 
            "io": "output"
        }, 
        {
            "info": "For DD terms, makes the listed directions non-solvable.", 
            "dtype": [
                "str", 
                "int"
            ], 
            "default": null, 
            "name": "g2-fix-dirs"
        }, 
        {
            "info": "Determines update type. This does not change the Jones solver type, but\nrestricts the update rule to pin the solutions within a certain subspace:\n'full' is the default behaviour;\n'diag' pins the off-diagonal terms to 0;\n'phase-diag' also pins the amplitudes of the diagonal terms to unity;\n'amp-diag' also pins the phases to 0.", 
            "dtype": "str", 
            "default": null, 
            "name": "g2-update-type"
        }, 
        {
            "info": "Flag solution intervals where the prior error estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "g2-max-prior-error"
        }, 
        {
            "info": "Flag solution intervals where the posterior variance estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "g2-max-post-error"
        }, 
        {
            "info": "Maximum number of iterations spent on this term.", 
            "dtype": "int", 
            "default": null, 
            "name": "g2-max-iter"
        }, 
        {
            "info": "Flag propagation policy. Determines how flags raised on gains propagate back\ninto the data. Options are 'never' to never propagate, 'always' to always\npropagate, 'default' to only propagate flags from direction-independent gains.", 
            "dtype": "str", 
            "default": null, 
            "name": "g2-prop-flags"
        }, 
        {
            "info": "Determines whether this term is direction dependent. --model-ddes must", 
            "dtype": "bool", 
            "default": null, 
            "name": "g3-dd-term"
        }, 
        {
            "info": "Time solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "g3-time-int"
        }, 
        {
            "info": "Frequency solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "g3-freq-int"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with diagonal amplitudes below this\nvalue.", 
            "dtype": "float", 
            "default": null, 
            "name": "g3-clip-low"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with any amplitudes above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "g3-clip-high"
        }, 
        {
            "info": "Number of iterations after which to clip this gain.", 
            "dtype": "int", 
            "default": null, 
            "name": "g3-clip-after"
        }, 
        {
            "info": "Minimum percentage of converged solutions to accept.", 
            "dtype": "float", 
            "default": null, 
            "name": "g3-conv-quorum"
        }, 
        {
            "info": "Reference antenna - its phase is guaranteed to be zero.", 
            "dtype": "str", 
            "default": null, 
            "name": "g3-ref-ant"
        }, 
        {
            "info": "Set to 0 (and specify -load-from or -xfer-from) to load a non-solvable\nterm is loaded from disk. Not to be confused with --sol-jones, which\ndetermines the active Jones terms.", 
            "dtype": "bool", 
            "default": null, 
            "name": "g3-solvable"
        }, 
        {
            "info": "Type of Jones matrix to solve for. Note that if multiple Jones terms are\nenabled, then only complex-2x2 is supported.", 
            "dtype": "str", 
            "default": null, 
            "name": "g3-type"
        }, 
        {
            "info": "Load solutions from given database. The DB must define solutions\non the same time/frequency grid (i.e. should normally come from\ncalibrating the same pointing/observation). By default, the Jones\nmatrix label is used to form up parameter names, but his may be\noverridden by adding an explicit \"//LABEL\" to the database filename.", 
            "dtype": "file", 
            "default": null, 
            "name": "g3-load-from", 
            "io": "input"
        }, 
        {
            "info": "Transfer solutions from given database. Similar to -load-from, but\nsolutions will be interpolated onto the required time/frequency grid,\nso they can originate from a different field (e.g. from a calibrator).", 
            "dtype": "file", 
            "default": null, 
            "name": "g3-xfer-from", 
            "io": "input"
        }, 
        {
            "info": "Save solutions to given database.", 
            "dtype": "file", 
            "default": null, 
            "name": "g3-save-to", 
            "io": "output"
        }, 
        {
            "info": "For DD terms, makes the listed directions non-solvable.", 
            "dtype": [
                "str", 
                "int"
            ], 
            "default": null, 
            "name": "g3-fix-dirs"
        }, 
        {
            "info": "Determines update type. This does not change the Jones solver type, but\nrestricts the update rule to pin the solutions within a certain subspace:\n'full' is the default behaviour;\n'diag' pins the off-diagonal terms to 0;\n'phase-diag' also pins the amplitudes of the diagonal terms to unity;\n'amp-diag' also pins the phases to 0.", 
            "dtype": "str", 
            "default": null, 
            "name": "g3-update-type"
        }, 
        {
            "info": "Flag solution intervals where the prior error estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "g3-max-prior-error"
        }, 
        {
            "info": "Flag solution intervals where the posterior variance estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "g3-max-post-error"
        }, 
        {
            "info": "Maximum number of iterations spent on this term.", 
            "dtype": "int", 
            "default": null, 
            "name": "g3-max-iter"
        }, 
        {
            "info": "Flag propagation policy. Determines how flags raised on gains propagate back\ninto the data. Options are 'never' to never propagate, 'always' to always\npropagate, 'default' to only propagate flags from direction-independent gains.", 
            "dtype": "str", 
            "default": null, 
            "name": "g3-prop-flags"
        }, 
        {
            "info": "Determines whether this term is direction dependent. --model-ddes must", 
            "dtype": "bool", 
            "default": null, 
            "name": "b-dd-term"
        }, 
        {
            "info": "Time solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "b-time-int"
        }, 
        {
            "info": "Frequency solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "b-freq-int"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with diagonal amplitudes below this\nvalue.", 
            "dtype": "float", 
            "default": null, 
            "name": "b-clip-low"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with any amplitudes above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "b-clip-high"
        }, 
        {
            "info": "Number of iterations after which to clip this gain.", 
            "dtype": "int", 
            "default": null, 
            "name": "b-clip-after"
        }, 
        {
            "info": "Minimum percentage of converged solutions to accept.", 
            "dtype": "float", 
            "default": null, 
            "name": "b-conv-quorum"
        }, 
        {
            "info": "Reference antenna - its phase is guaranteed to be zero.", 
            "dtype": "str", 
            "default": null, 
            "name": "b-ref-ant"
        }, 
        {
            "info": "Set to 0 (and specify -load-from or -xfer-from) to load a non-solvable\nterm is loaded from disk. Not to be confused with --sol-jones, which\ndetermines the active Jones terms.", 
            "dtype": "bool", 
            "default": null, 
            "name": "b-solvable"
        }, 
        {
            "info": "Type of Jones matrix to solve for. Note that if multiple Jones terms are\nenabled, then only complex-2x2 is supported.", 
            "dtype": "str", 
            "default": null, 
            "name": "b-type"
        }, 
        {
            "info": "Load solutions from given database. The DB must define solutions\non the same time/frequency grid (i.e. should normally come from\ncalibrating the same pointing/observation). By default, the Jones\nmatrix label is used to form up parameter names, but his may be\noverridden by adding an explicit \"//LABEL\" to the database filename.", 
            "dtype": "file", 
            "default": null, 
            "name": "b-load-from", 
            "io": "input"
        }, 
        {
            "info": "Transfer solutions from given database. Similar to -load-from, but\nsolutions will be interpolated onto the required time/frequency grid,\nso they can originate from a different field (e.g. from a calibrator).", 
            "dtype": "file", 
            "default": null, 
            "name": "b-xfer-from", 
            "io": "input"
        }, 
        {
            "info": "Save solutions to given database.", 
            "dtype": "file", 
            "default": null, 
            "name": "b-save-to", 
            "io": "output"
        }, 
        {
            "info": "For DD terms, makes the listed directions non-solvable.", 
            "dtype": [
                "str", 
                "int"
            ], 
            "default": null, 
            "name": "b-fix-dirs"
        }, 
        {
            "info": "Determines update type. This does not change the Jones solver type, but\nrestricts the update rule to pin the solutions within a certain subspace:\n'full' is the default behaviour;\n'diag' pins the off-diagonal terms to 0;\n'phase-diag' also pins the amplitudes of the diagonal terms to unity;\n'amp-diag' also pins the phases to 0.", 
            "dtype": "str", 
            "default": null, 
            "name": "b-update-type"
        }, 
        {
            "info": "Flag solution intervals where the prior error estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "b-max-prior-error"
        }, 
        {
            "info": "Flag solution intervals where the posterior variance estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "b-max-post-error"
        }, 
        {
            "info": "Maximum number of iterations spent on this term.", 
            "dtype": "int", 
            "default": null, 
            "name": "b-max-iter"
        }, 
        {
            "info": "Flag propagation policy. Determines how flags raised on gains propagate back\ninto the data. Options are 'never' to never propagate, 'always' to always\npropagate, 'default' to only propagate flags from direction-independent gains.", 
            "dtype": "str", 
            "default": null, 
            "name": "b-prop-flags"
        }, 
        {
            "info": "Determines whether this term is direction dependent. --model-ddes must", 
            "dtype": "bool", 
            "default": null, 
            "name": "b1-dd-term"
        }, 
        {
            "info": "Time solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "b1-time-int"
        }, 
        {
            "info": "Frequency solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "b1-freq-int"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with diagonal amplitudes below this\nvalue.", 
            "dtype": "float", 
            "default": null, 
            "name": "b1-clip-low"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with any amplitudes above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "b1-clip-high"
        }, 
        {
            "info": "Number of iterations after which to clip this gain.", 
            "dtype": "int", 
            "default": null, 
            "name": "b1-clip-after"
        }, 
        {
            "info": "Minimum percentage of converged solutions to accept.", 
            "dtype": "float", 
            "default": null, 
            "name": "b1-conv-quorum"
        }, 
        {
            "info": "Reference antenna - its phase is guaranteed to be zero.", 
            "dtype": "str", 
            "default": null, 
            "name": "b1-ref-ant"
        }, 
        {
            "info": "Set to 0 (and specify -load-from or -xfer-from) to load a non-solvable\nterm is loaded from disk. Not to be confused with --sol-jones, which\ndetermines the active Jones terms.", 
            "dtype": "bool", 
            "default": null, 
            "name": "b1-solvable"
        }, 
        {
            "info": "Type of Jones matrix to solve for. Note that if multiple Jones terms are\nenabled, then only complex-2x2 is supported.", 
            "dtype": "str", 
            "default": null, 
            "name": "b1-type"
        }, 
        {
            "info": "Load solutions from given database. The DB must define solutions\non the same time/frequency grid (i.e. should normally come from\ncalibrating the same pointing/observation). By default, the Jones\nmatrix label is used to form up parameter names, but his may be\noverridden by adding an explicit \"//LABEL\" to the database filename.", 
            "dtype": "file", 
            "default": null, 
            "name": "b1-load-from", 
            "io": "input"
        }, 
        {
            "info": "Transfer solutions from given database. Similar to -load-from, but\nsolutions will be interpolated onto the required time/frequency grid,\nso they can originate from a different field (e.g. from a calibrator).", 
            "dtype": "file", 
            "default": null, 
            "name": "b1-xfer-from", 
            "io": "input"
        }, 
        {
            "info": "Save solutions to given database.", 
            "dtype": "file", 
            "default": null, 
            "name": "b1-save-to", 
            "io": "output"
        }, 
        {
            "info": "For DD terms, makes the listed directions non-solvable.", 
            "dtype": [
                "str", 
                "int"
            ], 
            "default": null, 
            "name": "b1-fix-dirs"
        }, 
        {
            "info": "Determines update type. This does not change the Jones solver type, but\nrestricts the update rule to pin the solutions within a certain subspace:\n'full' is the default behaviour;\n'diag' pins the off-diagonal terms to 0;\n'phase-diag' also pins the amplitudes of the diagonal terms to unity;\n'amp-diag' also pins the phases to 0.", 
            "dtype": "str", 
            "default": null, 
            "name": "b1-update-type"
        }, 
        {
            "info": "Flag solution intervals where the prior error estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "b1-max-prior-error"
        }, 
        {
            "info": "Flag solution intervals where the posterior variance estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "b1-max-post-error"
        }, 
        {
            "info": "Maximum number of iterations spent on this term.", 
            "dtype": "int", 
            "default": null, 
            "name": "b1-max-iter"
        }, 
        {
            "info": "Flag propagation policy. Determines how flags raised on gains propagate back\ninto the data. Options are 'never' to never propagate, 'always' to always\npropagate, 'default' to only propagate flags from direction-independent gains.", 
            "dtype": "str", 
            "default": null, 
            "name": "b1-prop-flags"
        }, 
        {
            "info": "Determines whether this term is direction dependent. --model-ddes must", 
            "dtype": "bool", 
            "default": null, 
            "name": "b2-dd-term"
        }, 
        {
            "info": "Time solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "b2-time-int"
        }, 
        {
            "info": "Frequency solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "b2-freq-int"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with diagonal amplitudes below this\nvalue.", 
            "dtype": "float", 
            "default": null, 
            "name": "b2-clip-low"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with any amplitudes above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "b2-clip-high"
        }, 
        {
            "info": "Number of iterations after which to clip this gain.", 
            "dtype": "int", 
            "default": null, 
            "name": "b2-clip-after"
        }, 
        {
            "info": "Minimum percentage of converged solutions to accept.", 
            "dtype": "float", 
            "default": null, 
            "name": "b2-conv-quorum"
        }, 
        {
            "info": "Reference antenna - its phase is guaranteed to be zero.", 
            "dtype": "str", 
            "default": null, 
            "name": "b2-ref-ant"
        }, 
        {
            "info": "Set to 0 (and specify -load-from or -xfer-from) to load a non-solvable\nterm is loaded from disk. Not to be confused with --sol-jones, which\ndetermines the active Jones terms.", 
            "dtype": "bool", 
            "default": null, 
            "name": "b2-solvable"
        }, 
        {
            "info": "Type of Jones matrix to solve for. Note that if multiple Jones terms are\nenabled, then only complex-2x2 is supported.", 
            "dtype": "str", 
            "default": null, 
            "name": "b2-type"
        }, 
        {
            "info": "Load solutions from given database. The DB must define solutions\non the same time/frequency grid (i.e. should normally come from\ncalibrating the same pointing/observation). By default, the Jones\nmatrix label is used to form up parameter names, but his may be\noverridden by adding an explicit \"//LABEL\" to the database filename.", 
            "dtype": "file", 
            "default": null, 
            "name": "b2-load-from", 
            "io": "input"
        }, 
        {
            "info": "Transfer solutions from given database. Similar to -load-from, but\nsolutions will be interpolated onto the required time/frequency grid,\nso they can originate from a different field (e.g. from a calibrator).", 
            "dtype": "file", 
            "default": null, 
            "name": "b2-xfer-from", 
            "io": "input"
        }, 
        {
            "info": "Save solutions to given database.", 
            "dtype": "file", 
            "default": null, 
            "name": "b2-save-to", 
            "io": "output"
        }, 
        {
            "info": "For DD terms, makes the listed directions non-solvable.", 
            "dtype": [
                "str", 
                "int"
            ], 
            "default": null, 
            "name": "b2-fix-dirs"
        }, 
        {
            "info": "Determines update type. This does not change the Jones solver type, but\nrestricts the update rule to pin the solutions within a certain subspace:\n'full' is the default behaviour;\n'diag' pins the off-diagonal terms to 0;\n'phase-diag' also pins the amplitudes of the diagonal terms to unity;\n'amp-diag' also pins the phases to 0.", 
            "dtype": "str", 
            "default": null, 
            "name": "b2-update-type"
        }, 
        {
            "info": "Flag solution intervals where the prior error estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "b2-max-prior-error"
        }, 
        {
            "info": "Flag solution intervals where the posterior variance estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "b2-max-post-error"
        }, 
        {
            "info": "Maximum number of iterations spent on this term.", 
            "dtype": "int", 
            "default": null, 
            "name": "b2-max-iter"
        }, 
        {
            "info": "Flag propagation policy. Determines how flags raised on gains propagate back\ninto the data. Options are 'never' to never propagate, 'always' to always\npropagate, 'default' to only propagate flags from direction-independent gains.", 
            "dtype": "str", 
            "default": null, 
            "name": "b2-prop-flags"
        }, 
        {
            "info": "Determines whether this term is direction dependent. --model-ddes must", 
            "dtype": "bool", 
            "default": null, 
            "name": "b3-dd-term"
        }, 
        {
            "info": "Time solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "b3-time-int"
        }, 
        {
            "info": "Frequency solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "b3-freq-int"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with diagonal amplitudes below this\nvalue.", 
            "dtype": "float", 
            "default": null, 
            "name": "b3-clip-low"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with any amplitudes above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "b3-clip-high"
        }, 
        {
            "info": "Number of iterations after which to clip this gain.", 
            "dtype": "int", 
            "default": null, 
            "name": "b3-clip-after"
        }, 
        {
            "info": "Minimum percentage of converged solutions to accept.", 
            "dtype": "float", 
            "default": null, 
            "name": "b3-conv-quorum"
        }, 
        {
            "info": "Reference antenna - its phase is guaranteed to be zero.", 
            "dtype": "str", 
            "default": null, 
            "name": "b3-ref-ant"
        }, 
        {
            "info": "Set to 0 (and specify -load-from or -xfer-from) to load a non-solvable\nterm is loaded from disk. Not to be confused with --sol-jones, which\ndetermines the active Jones terms.", 
            "dtype": "bool", 
            "default": null, 
            "name": "b3-solvable"
        }, 
        {
            "info": "Type of Jones matrix to solve for. Note that if multiple Jones terms are\nenabled, then only complex-2x2 is supported.", 
            "dtype": "str", 
            "default": null, 
            "name": "b3-type"
        }, 
        {
            "info": "Load solutions from given database. The DB must define solutions\non the same time/frequency grid (i.e. should normally come from\ncalibrating the same pointing/observation). By default, the Jones\nmatrix label is used to form up parameter names, but his may be\noverridden by adding an explicit \"//LABEL\" to the database filename.", 
            "dtype": "file", 
            "default": null, 
            "name": "b3-load-from", 
            "io": "input"
        }, 
        {
            "info": "Transfer solutions from given database. Similar to -load-from, but\nsolutions will be interpolated onto the required time/frequency grid,\nso they can originate from a different field (e.g. from a calibrator).", 
            "dtype": "file", 
            "default": null, 
            "name": "b3-xfer-from", 
            "io": "input"
        }, 
        {
            "info": "Save solutions to given database.", 
            "dtype": "file", 
            "default": null, 
            "name": "b3-save-to", 
            "io": "output"
        }, 
        {
            "info": "For DD terms, makes the listed directions non-solvable.", 
            "dtype": [
                "str", 
                "int"
            ], 
            "default": null, 
            "name": "b3-fix-dirs"
        }, 
        {
            "info": "Determines update type. This does not change the Jones solver type, but\nrestricts the update rule to pin the solutions within a certain subspace:\n'full' is the default behaviour;\n'diag' pins the off-diagonal terms to 0;\n'phase-diag' also pins the amplitudes of the diagonal terms to unity;\n'amp-diag' also pins the phases to 0.", 
            "dtype": "str", 
            "default": null, 
            "name": "b3-update-type"
        }, 
        {
            "info": "Flag solution intervals where the prior error estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "b3-max-prior-error"
        }, 
        {
            "info": "Flag solution intervals where the posterior variance estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "b3-max-post-error"
        }, 
        {
            "info": "Maximum number of iterations spent on this term.", 
            "dtype": "int", 
            "default": null, 
            "name": "b3-max-iter"
        }, 
        {
            "info": "Flag propagation policy. Determines how flags raised on gains propagate back\ninto the data. Options are 'never' to never propagate, 'always' to always\npropagate, 'default' to only propagate flags from direction-independent gains.", 
            "dtype": "str", 
            "default": null, 
            "name": "b3-prop-flags"
        }, 
        {
            "info": "Determines whether this term is direction dependent. --model-ddes must", 
            "dtype": "bool", 
            "default": true, 
            "name": "dd-dd-term"
        }, 
        {
            "info": "Time solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "dd-time-int"
        }, 
        {
            "info": "Frequency solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "dd-freq-int"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with diagonal amplitudes below this\nvalue.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd-clip-low"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with any amplitudes above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd-clip-high"
        }, 
        {
            "info": "Number of iterations after which to clip this gain.", 
            "dtype": "int", 
            "default": null, 
            "name": "dd-clip-after"
        }, 
        {
            "info": "Minimum percentage of converged solutions to accept.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd-conv-quorum"
        }, 
        {
            "info": "Reference antenna - its phase is guaranteed to be zero.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd-ref-ant"
        }, 
        {
            "info": "Set to 0 (and specify -load-from or -xfer-from) to load a non-solvable\nterm is loaded from disk. Not to be confused with --sol-jones, which\ndetermines the active Jones terms.", 
            "dtype": "bool", 
            "default": null, 
            "name": "dd-solvable"
        }, 
        {
            "info": "Type of Jones matrix to solve for. Note that if multiple Jones terms are\nenabled, then only complex-2x2 is supported.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd-type"
        }, 
        {
            "info": "Load solutions from given database. The DB must define solutions\non the same time/frequency grid (i.e. should normally come from\ncalibrating the same pointing/observation). By default, the Jones\nmatrix label is used to form up parameter names, but his may be\noverridden by adding an explicit \"//LABEL\" to the database filename.", 
            "dtype": "file", 
            "default": null, 
            "name": "dd-load-from", 
            "io": "input"
        }, 
        {
            "info": "Transfer solutions from given database. Similar to -load-from, but\nsolutions will be interpolated onto the required time/frequency grid,\nso they can originate from a different field (e.g. from a calibrator).", 
            "dtype": "file", 
            "default": null, 
            "name": "dd-xfer-from", 
            "io": "input"
        }, 
        {
            "info": "Save solutions to given database.", 
            "dtype": "file", 
            "default": null, 
            "name": "dd-save-to", 
            "io": "output"
        }, 
        {
            "info": "For DD terms, makes the listed directions non-solvable.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd-fix-dirs"
        }, 
        {
            "info": "Determines update type. This does not change the Jones solver type, but\nrestricts the update rule to pin the solutions within a certain subspace:\n'full' is the default behaviour;\n'diag' pins the off-diagonal terms to 0;\n'phase-diag' also pins the amplitudes of the diagonal terms to unity;\n'amp-diag' also pins the phases to 0.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd-update-type"
        }, 
        {
            "info": "Flag solution intervals where the prior error estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd-max-prior-error"
        }, 
        {
            "info": "Flag solution intervals where the posterior variance estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd-max-post-error"
        }, 
        {
            "info": "Maximum number of iterations spent on this term.", 
            "dtype": "int", 
            "default": null, 
            "name": "dd-max-iter"
        }, 
        {
            "info": "Flag propagation policy. Determines how flags raised on gains propagate back\ninto the data. Options are 'never' to never propagate, 'always' to always\npropagate, 'default' to only propagate flags from direction-independent gains.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd-prop-flags"
        }, 
        {
            "info": "Time solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "dd1-time-int"
        }, 
        {
            "info": "Frequency solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "dd1-freq-int"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with diagonal amplitudes below this\nvalue.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd1-clip-low"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with any amplitudes above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd1-clip-high"
        }, 
        {
            "info": "Number of iterations after which to clip this gain.", 
            "dtype": "int", 
            "default": null, 
            "name": "dd1-clip-after"
        }, 
        {
            "info": "Minimum percentage of converged solutions to accept.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd1-conv-quorum"
        }, 
        {
            "info": "Reference antenna - its phase is guaranteed to be zero.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd1-ref-ant"
        }, 
        {
            "info": "Set to 0 (and specify -load-from or -xfer-from) to load a non-solvable\nterm is loaded from disk. Not to be confused with --sol-jones, which\ndetermines the active Jones terms.", 
            "dtype": "bool", 
            "default": null, 
            "name": "dd1-solvable"
        }, 
        {
            "info": "Type of Jones matrix to solve for. Note that if multiple Jones terms are\nenabled, then only complex-2x2 is supported.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd1-type"
        }, 
        {
            "info": "Load solutions from given database. The DB must define solutions\non the same time/frequency grid (i.e. should normally come from\ncalibrating the same pointing/observation). By default, the Jones\nmatrix label is used to form up parameter names, but his may be\noverridden by adding an explicit \"//LABEL\" to the database filename.", 
            "dtype": "file", 
            "default": null, 
            "name": "dd1-load-from", 
            "io": "input"
        }, 
        {
            "info": "Transfer solutions from given database. Similar to -load-from, but\nsolutions will be interpolated onto the required time/frequency grid,\nso they can originate from a different field (e.g. from a calibrator).", 
            "dtype": "file", 
            "default": null, 
            "name": "dd1-xfer-from", 
            "io": "input"
        }, 
        {
            "info": "Save solutions to given database.", 
            "dtype": "file", 
            "default": null, 
            "name": "dd1-save-to", 
            "io": "output"
        }, 
        {
            "info": "For DD terms, makes the listed directions non-solvable.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd1-fix-dirs"
        }, 
        {
            "info": "Determines update type. This does not change the Jones solver type, but\nrestricts the update rule to pin the solutions within a certain subspace:\n'full' is the default behaviour;\n'diag' pins the off-diagonal terms to 0;\n'phase-diag' also pins the amplitudes of the diagonal terms to unity;\n'amp-diag' also pins the phases to 0.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd1-update-type"
        }, 
        {
            "info": "Flag solution intervals where the prior error estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd1-max-prior-error"
        }, 
        {
            "info": "Flag solution intervals where the posterior variance estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd1-max-post-error"
        }, 
        {
            "info": "Maximum number of iterations spent on this term.", 
            "dtype": "int", 
            "default": null, 
            "name": "dd1-max-iter"
        }, 
        {
            "info": "Flag propagation policy. Determines how flags raised on gains propagate back\ninto the data. Options are 'never' to never propagate, 'always' to always\npropagate, 'default' to only propagate flags from direction-independent gains.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd1-prop-flags"
        }, 
        {
            "info": "Time solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "dd2-time-int"
        }, 
        {
            "info": "Frequency solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "dd2-freq-int"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with diagonal amplitudes below this\nvalue.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd2-clip-low"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with any amplitudes above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd2-clip-high"
        }, 
        {
            "info": "Number of iterations after which to clip this gain.", 
            "dtype": "int", 
            "default": null, 
            "name": "dd2-clip-after"
        }, 
        {
            "info": "Minimum percentage of converged solutions to accept.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd2-conv-quorum"
        }, 
        {
            "info": "Reference antenna - its phase is guaranteed to be zero.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd2-ref-ant"
        }, 
        {
            "info": "Set to 0 (and specify -load-from or -xfer-from) to load a non-solvable\nterm is loaded from disk. Not to be confused with --sol-jones, which\ndetermines the active Jones terms.", 
            "dtype": "bool", 
            "default": null, 
            "name": "dd2-solvable"
        }, 
        {
            "info": "Type of Jones matrix to solve for. Note that if multiple Jones terms are\nenabled, then only complex-2x2 is supported.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd2-type"
        }, 
        {
            "info": "Load solutions from given database. The DB must define solutions\non the same time/frequency grid (i.e. should normally come from\ncalibrating the same pointing/observation). By default, the Jones\nmatrix label is used to form up parameter names, but his may be\noverridden by adding an explicit \"//LABEL\" to the database filename.", 
            "dtype": "file", 
            "default": null, 
            "name": "dd2-load-from", 
            "io": "input"
        }, 
        {
            "info": "Transfer solutions from given database. Similar to -load-from, but\nsolutions will be interpolated onto the required time/frequency grid,\nso they can originate from a different field (e.g. from a calibrator).", 
            "dtype": "file", 
            "default": null, 
            "name": "dd2-xfer-from", 
            "io": "input"
        }, 
        {
            "info": "Save solutions to given database.", 
            "dtype": "file", 
            "default": null, 
            "name": "dd2-save-to", 
            "io": "output"
        }, 
        {
            "info": "For DD terms, makes the listed directions non-solvable.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd2-fix-dirs"
        }, 
        {
            "info": "Determines update type. This does not change the Jones solver type, but\nrestricts the update rule to pin the solutions within a certain subspace:\n'full' is the default behaviour;\n'diag' pins the off-diagonal terms to 0;\n'phase-diag' also pins the amplitudes of the diagonal terms to unity;\n'amp-diag' also pins the phases to 0.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd2-update-type"
        }, 
        {
            "info": "Flag solution intervals where the prior error estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd2-max-prior-error"
        }, 
        {
            "info": "Flag solution intervals where the posterior variance estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd2-max-post-error"
        }, 
        {
            "info": "Maximum number of iterations spent on this term.", 
            "dtype": "int", 
            "default": null, 
            "name": "dd2-max-iter"
        }, 
        {
            "info": "Flag propagation policy. Determines how flags raised on gains propagate back\ninto the data. Options are 'never' to never propagate, 'always' to always\npropagate, 'default' to only propagate flags from direction-independent gains.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd2-prop-flags"
        }, 
        {
            "info": "Time solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "dd3-time-int"
        }, 
        {
            "info": "Frequency solution interval for this term. 0 means use entire chunk.", 
            "dtype": [
                "int", 
                "float"
            ], 
            "default": null, 
            "name": "dd3-freq-int"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with diagonal amplitudes below this\nvalue.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd3-clip-low"
        }, 
        {
            "info": "Amplitude clipping - flag solutions with any amplitudes above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd3-clip-high"
        }, 
        {
            "info": "Number of iterations after which to clip this gain.", 
            "dtype": "int", 
            "default": null, 
            "name": "dd3-clip-after"
        }, 
        {
            "info": "Minimum percentage of converged solutions to accept.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd3-conv-quorum"
        }, 
        {
            "info": "Reference antenna - its phase is guaranteed to be zero.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd3-ref-ant"
        }, 
        {
            "info": "Set to 0 (and specify -load-from or -xfer-from) to load a non-solvable\nterm is loaded from disk. Not to be confused with --sol-jones, which\ndetermines the active Jones terms.", 
            "dtype": "bool", 
            "default": null, 
            "name": "dd3-solvable"
        }, 
        {
            "info": "Type of Jones matrix to solve for. Note that if multiple Jones terms are\nenabled, then only complex-2x2 is supported.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd3-type"
        }, 
        {
            "info": "Load solutions from given database. The DB must define solutions\non the same time/frequency grid (i.e. should normally come from\ncalibrating the same pointing/observation). By default, the Jones\nmatrix label is used to form up parameter names, but his may be\noverridden by adding an explicit \"//LABEL\" to the database filename.", 
            "dtype": "file", 
            "default": null, 
            "name": "dd3-load-from", 
            "io": "input"
        }, 
        {
            "info": "Transfer solutions from given database. Similar to -load-from, but\nsolutions will be interpolated onto the required time/frequency grid,\nso they can originate from a different field (e.g. from a calibrator).", 
            "dtype": "file", 
            "default": null, 
            "name": "dd3-xfer-from", 
            "io": "input"
        }, 
        {
            "info": "Save solutions to given database.", 
            "dtype": "file", 
            "default": null, 
            "name": "dd3-save-to", 
            "io": "output"
        }, 
        {
            "info": "For DD terms, makes the listed directions non-solvable.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd3-fix-dirs"
        }, 
        {
            "info": "Determines update type. This does not change the Jones solver type, but\nrestricts the update rule to pin the solutions within a certain subspace:\n'full' is the default behaviour;\n'diag' pins the off-diagonal terms to 0;\n'phase-diag' also pins the amplitudes of the diagonal terms to unity;\n'amp-diag' also pins the phases to 0.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd3-update-type"
        }, 
        {
            "info": "Flag solution intervals where the prior error estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd3-max-prior-error"
        }, 
        {
            "info": "Flag solution intervals where the posterior variance estimate is above this value.", 
            "dtype": "float", 
            "default": null, 
            "name": "dd3-max-post-error"
        }, 
        {
            "info": "Maximum number of iterations spent on this term.", 
            "dtype": "int", 
            "default": null, 
            "name": "dd3-max-iter"
        }, 
        {
            "info": "Flag propagation policy. Determines how flags raised on gains propagate back\ninto the data. Options are 'never' to never propagate, 'always' to always\npropagate, 'default' to only propagate flags from direction-independent gains.", 
            "dtype": "str", 
            "default": null, 
            "name": "dd3-prop-flags"
        }, 
        {
            "info": "Default console output verbosity level", 
            "dtype": [
                "bool", 
                "str"
            ], 
            "name": "log-verbose"
        },
        {
            "info": "Oversampling factor.",
            "dtype": "int",
            "name": "degridding-OverS",
            "default": 11
        },
        {
            "info": "CF support size.",
            "dtype": "int",
            "name": "degridding-Support",
            "default": 7
        },
        {
            "info": "Number of w-planes.",
            "dtype": "int",
            "name": "degridding-Nw",
            "default": 100
        },
        {
            "info": "Maximum w coordinate (meters). Visibilities with larger w will not be gridded. If 0, no maximum is imposed.",
            "dtype": "float",
            "name": "degridding-wmax",
            "default": 0
        },
        {
            "info": "Facet padding factor.",
            "dtype": "float",
            "name": "degridding-Padding",
            "default": 1.7
        },
        {
            "info": "Number of image bands for degridding. 0 means degrid each channel.",
            "dtype": "int",
            "name": "degridding-NDegridBand",
            "default": 16
        },
        {
            "info": "Maximum facet size in degrees",
            "dtype": "float",
            "name": "degridding-MaxFacetSize",
            "default": 0.25
        },
        {
            "info": "Minimum number of facets per direction",
            "dtype": "int",
            "name": "degridding-MinNFacetPerAxis",
            "default": 1
        }
    ]
}
