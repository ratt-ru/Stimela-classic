{
    "task": "lwimager", 
    "base": "stimela/casarest", 
    "tag": "0.3.2", 
    "description": "Image and deconvolve a measurement set (MS)", 
    "prefix": " ", 
    "binary": "lwimager", 
    "msdir": true, 
    "parameters": [
        {
            "info": "MS to be imaged and/or deconvolved", 
            "name": "msname", 
            "io": "msfile", 
            "default": null, 
            "dtype": "file", 
            "required": true, 
            "mapping": "ms"
        }, 
        {
            "info": "Prefix for output images. If not specified, will use the basename of MS.", 
            "dtype": "file", 
            "default": null, 
            "name": "prefix", 
            "io": "output"
        }, 
        {
            "info": "Column to be imaged. Note that you can only make a clean (or restored) image from the CORRECTED_DATA column", 
            "dtype": "str", 
            "default": "CORRECTED_DATA", 
            "name": "column", 
            "mapping": "data"
        }, 
        {
            "info": "Image size in pixels", 
            "dtype": "int", 
            "default": 2048, 
            "name": "npix"
        }, 
        {
            "info": "Size of a pixel in arcsec. But can also be specified as '2arcsec/2armnin etc.", 
            "dtype": [
                "str", 
                "float"
            ], 
            "default": "2arcsec", 
            "name": "cellsize"
        }, 
        {
            "info": "Visibility weighting mode", 
            "dtype": "str", 
            "default": "briggs", 
            "name": "weight", 
            "choices": [
                "briggs", 
                "natural", 
                "uniform", 
                "radial"
            ]
        }, 
        {
            "info": "Briggs robustness parameter", 
            "dtype": "float", 
            "default": 0.0, 
            "name": "robust"
        }, 
        {
            "info": "Name of prior image file", 
            "dtype": "file", 
            "default": null, 
            "name": "prior", 
            "io": "input"
        }, 
        {
            "info": "Imaging mode", 
            "dtype": "str", 
            "default": "mfs", 
            "name": "mode", 
            "choices": [
                "mfs", 
                "channel", 
                "velocity"
            ]
        }, 
        {
            "info": "Apply gaussian tapering filter; specify as major,minor,pa", 
            "dtype": "str", 
            "default": null, 
            "name": "filter"
        }, 
        {
            "info": "Specify clean restoring beam; specify as major axis,minor axis,position angle with unitsi", 
            "dtype": "str", 
            "default": null, 
            "name": "clean_beam"
        }, 
        {
            "info": "Field of view size for uniform/briggs weighting, if different from image size", 
            "dtype": "str", 
            "default": null, 
            "name": "weight_fov"
        }, 
        {
            "info": "Noise (in Jy) for briggsabs weightingfloat", 
            "dtype": "float", 
            "default": null, 
            "name": "noise"
        }, 
        {
            "info": "if >0 specifies nr of convolution functions to use in W-projection", 
            "dtype": "int", 
            "default": 0, 
            "name": "wprojplanes"
        }, 
        {
            "info": "padding factor in image plane (>=1.0)", 
            "dtype": "float", 
            "default": null, 
            "name": "padding"
        }, 
        {
            "info": "Maximum size of gridding cache (in MB)", 
            "dtype": "int", 
            "default": 512, 
            "name": "cachesize"
        }, 
        {
            "info": "Stokes parameters to image", 
            "dtype": "str", 
            "default": "I", 
            "name": "stokes"
        }, 
        {
            "info": "Number of facets in x or y", 
            "dtype": "int", 
            "default": null, 
            "name": "nfacets"
        }, 
        {
            "info": "Phase center to be used (e.g. 'j2000,05h30m,-30.2deg')", 
            "dtype": "str", 
            "default": null, 
            "name": "phasecenter"
        }, 
        {
            "info": "Field ID", 
            "dtype": "int", 
            "default": 0, 
            "name": "field-id", 
            "mapping": "field"
        }, 
        {
            "info": "Spectral window ID(s)", 
            "dtype": "str", 
            "default": null, 
            "name": "spw-id", 
            "mapping": "spwid"
        }, 
        {
            "info": "Frequency channel mode", 
            "dtype": "str", 
            "default": "channel", 
            "name": "chanmode"
        }, 
        {
            "info": "number of frequency channels to select from each spectral window (one number per spw). Comma separated string", 
            "dtype": [
                "str", 
                "int"
            ], 
            "default": 1, 
            "name": "nchan"
        }, 
        {
            "info": "First frequency channel per each spw (0-relative). Comma separated string", 
            "dtype": [
                "str", 
                "int"
            ], 
            "default": 0, 
            "name": "chanstart"
        }, 
        {
            "info": "fre`iquency channel step per each spw. Comma separated string", 
            "dtype": [
                "str", 
                "int"
            ], 
            "default": 1, 
            "name": "chanstep"
        }, 
        {
            "info": "Number of frequency channels in image", 
            "dtype": "int", 
            "default": 1, 
            "name": "img_nchan"
        }, 
        {
            "info": "first frequency channel in image (0-relative)", 
            "dtype": "int", 
            "default": 0, 
            "name": "img_chanstart"
        }, 
        {
            "info": "frequency channel step in image", 
            "dtype": "int", 
            "default": 1, 
            "name": "img_chanstep"
        }, 
        {
            "info": "UV range filter for MS", 
            "dtype": "str", 
            "default": null, 
            "name": "uvrange"
        }, 
        {
            "info": "TaQL selection string for MS", 
            "dtype": "str", 
            "default": null, 
            "name": "select"
        }, 
        {
            "info": "Operation", 
            "dtype": "str", 
            "default": "image", 
            "name": "operation", 
            "choices": [
                "empty", 
                "image", 
                "psf", 
                "clark", 
                "hogbom", 
                "csclean", 
                "multiscale", 
                "entropy"
            ]
        }, 
        {
            "info": "Number of clean iterations", 
            "dtype": "int", 
            "default": 0, 
            "name": "clean_iterations", 
            "mapping": "niter"
        }, 
        {
            "info": "Loop gain for cleaning", 
            "dtype": "float", 
            "default": 0.1, 
            "name": "gain"
        }, 
        {
            "info": "Flux level at which to stop cleaning. Assumed to be in Jy if units not specified.", 
            "dtype": [
                "float", 
                "str"
            ], 
            "default": 0, 
            "name": "threshold"
        }, 
        {
            "info": "Target flux for maximum entropy", 
            "dtype": [
                "float", 
                "str"
            ], 
            "default": null, 
            "name": "targetflux"
        }, 
        {
            "info": "Deviation for maximum entropy", 
            "dtype": [
                "float", 
                "str"
            ], 
            "default": null, 
            "name": "sigma"
        }, 
        {
            "info": "Keep clean model fixed", 
            "dtype": "bool", 
            "default": false, 
            "name": "fixed"
        }, 
        {
            "info": "Fill MODEL_DATA column with clean model visibilities, else keeps model in memory", 
            "dtype": "bool", 
            "default": true, 
            "name": "fillmodel"
        }, 
        {
            "info": "Constrain image to match target flux? For max entropy", 
            "dtype": "bool", 
            "default": null, 
            "name": "constrainflux"
        }, 
        {
            "info": "Should FITS image spectral axis be velocity or frequency", 
            "dtype": "bool", 
            "default": null, 
            "name": "prefervelocity"
        }, 
        {
            "info": "Name of the mask to use in cleaning", 
            "dtype": "file", 
            "default": null, 
            "name": "mask", 
            "io": "input"
        }, 
        {
            "info": "Bottom left corner of mask region", 
            "dtype": "str", 
            "default": null, 
            "name": "maskblc"
        }, 
        {
            "info": "Top right corner of mask region", 
            "dtype": "str", 
            "default": null, 
            "name": "masktrc"
        }, 
        {
            "info": "Scales for multiscale clean", 
            "dtype": "int", 
            "default": null, 
            "name": "nscales"
        }, 
        {
            "info": "User-defined scales for multiscale clean. Comma separated string", 
            "dtype": "str", 
            "default": null, 
            "name": "uservector"
        }, 
        {
            "info": "Value to store in mask region; if given, mask is created; if mask not exists, defaults to 1.0", 
            "dtype": "float", 
            "default": null, 
            "name": "maskvalue"
        }, 
        {
            "info": "Simulate a FITS image into MS", 
            "dtype": "file", 
            "default": null, 
            "name": "simulate_fits", 
            "io": "input"
        }, 
        {
            "info": "Predict from FITS files in chunks in the frequency axis", 
            "dtype": "int", 
            "default": null, 
            "name": "chanchunk"
        }, 
        {
            "info": "Multi-field deconvolution parameter; see casapy's imager.setmfcontrol", 
            "dtype": "float", 
            "default": null, 
            "name": "cyclefactor"
        }, 
        {
            "info": "multi-field deconvolution parameter; see casapy's imager.setmfcontrol", 
            "dtype": "float", 
            "default": null, 
            "name": "cyclespeedup"
        }, 
        {
            "info": "Multi-field deconvolution parameter; see casapy's imager.setmfcontrol", 
            "dtype": "int", 
            "default": null, 
            "name": "cyclemaxpsffraction"
        }, 
        {
            "info": "Multi-field deconvolution parameter; see casapy's imager.setmfcontrol", 
            "dtype": "int", 
            "default": null, 
            "name": "stoplargenegatives"
        }, 
        {
            "info": "Multi-field deconvolution parameter; see casapy's imager.setmfcontrol", 
            "dtype": "int", 
            "default": null, 
            "name": "stoppointmode"
        }
    ]
}